{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Entry.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","Entry","entry","handleDeletePerson","name","number","onClick","Persons","newSearch","length","persons","filter","toLowerCase","includes","map","key","id","handleDeletePersonOf","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNewSearch","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","personsService","initialPersons","event","target","preventDefault","x","returnedPerson","concat","setTimeout","window","confirm","person","find","n","changedPerson","catch","error","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35568d30.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = props => {\r\n    return (\r\n        <div>\r\n            <input value={props.value} onChange={props.onChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = props => {\r\n    return (\r\n        <form onSubmit={props.onSubmit}>\r\n            <div>\r\n                name:{\" \"}\r\n                <input value={props.nameValue} onChange={props.nameOnChange} />\r\n            </div>\r\n            <div>\r\n                number:\r\n                <input\r\n                    value={props.numberValue}\r\n                    onChange={props.numberOnChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Entry = ({ entry, handleDeletePerson }) => {\r\n    return (\r\n        <li>\r\n            {entry.name} &ndash; {entry.number}\r\n            <button onClick={handleDeletePerson}>Delete</button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Entry;\r\n","import React from \"react\";\r\nimport Entry from \"./Entry\";\r\n\r\nconst Persons = props => {\r\n    if (props.newSearch.length > 0) {\r\n        let isMatch = props.persons.filter(function(entry) {\r\n            return (\r\n                entry.name\r\n                    .toLowerCase()\r\n                    .includes(props.newSearch.toLowerCase()) === true\r\n            );\r\n        });\r\n\r\n        return isMatch.map(entry => (\r\n            <Entry\r\n                key={entry.id}\r\n                entry={entry}\r\n                handleDeletePerson={() => props.handleDeletePersonOf(entry.id)}\r\n            />\r\n        ));\r\n    } else {\r\n        return props.persons.map(entry => (\r\n            <Entry\r\n                key={entry.id}\r\n                entry={entry}\r\n                handleDeletePerson={() => props.handleDeletePersonOf(entry.id)}\r\n            />\r\n        ));\r\n    }\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n\r\n    return <div className={type}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl);\r\n\treturn request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n\tconst request = axios.post(baseUrl, newObject);\r\n\treturn request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then(response => response.data);\r\n};\r\n\r\nconst deleteEntry = id => {\r\n\tconst request = axios.delete(`${baseUrl}/${id}`);\r\n\treturn request.then(response => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, deleteEntry };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Persons from \"./components/Persons\";\r\nimport Notification from \"./components/Notification\";\r\nimport personsService from \"./services/persons\";\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [newNumber, setNewNumber] = useState(\"\");\r\n    const [newSearch, setNewSearch] = useState(\"\");\r\n    const [notificationMessage, setNotificationMessage] = useState(null);\r\n    const [notificationType, setNotificationType] = useState(null);\r\n\r\n    useEffect(() => {\r\n        personsService.getAll().then(initialPersons => {\r\n            setPersons(initialPersons);\r\n        });\r\n    }, []);\r\n\r\n    const addPerson = event => {\r\n        event.preventDefault();\r\n        let checkName = persons.filter(\r\n            x => x.name.toLowerCase() === newName.toLowerCase()\r\n        );\r\n\r\n        if (checkName.length === 0) {\r\n            const personObject = {\r\n                name: newName,\r\n                number: newNumber\r\n            };\r\n            personsService.create(personObject).then(returnedPerson => {\r\n                setPersons(persons.concat(returnedPerson));\r\n                setNewName(\"\");\r\n                setNewNumber(\"\");\r\n                setNotificationMessage(\r\n                    `${newName} was added to the phonebook.`\r\n                );\r\n                setNotificationType(\"success\");\r\n                setTimeout(() => {\r\n                    setNotificationMessage(null);\r\n                }, 5000);\r\n            });\r\n        } else {\r\n            if (\r\n                window.confirm(\r\n                    `${newName} is already added to phonebook. Would you like to replace the old number with a new one?`\r\n                )\r\n            ) {\r\n                const person = persons.find(n => n.name === newName);\r\n                const changedPerson = { ...person, number: newNumber };\r\n                let id = person.id;\r\n                personsService\r\n                    .update(id, changedPerson)\r\n                    .then(returnedPerson => {\r\n                        setPersons(\r\n                            persons.map(person =>\r\n                                person.id !== id ? person : returnedPerson\r\n                            )\r\n                        );\r\n                        setNewName(\"\");\r\n                        setNewNumber(\"\");\r\n                        setNotificationMessage(\r\n                            `${newName}'s number has been updated to ${newNumber}.`\r\n                        );\r\n                        setNotificationType(\"success\");\r\n                        setTimeout(() => {\r\n                            setNotificationMessage(null);\r\n                        }, 5000);\r\n                    })\r\n                    .catch(error => {\r\n                        setNotificationMessage(\r\n                            `This entry has already been removed from the phonebook. Cannot edit the number.`\r\n                        );\r\n                        setNotificationType(\"error\");\r\n                        setTimeout(() => {\r\n                            setNotificationMessage(null);\r\n                        }, 5000);\r\n                        setPersons(persons.filter(n => n.id !== id));\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    const deletePerson = id => {\r\n        if (window.confirm(\"Do you really want to delete this entry?\")) {\r\n            personsService\r\n                .deleteEntry(id)\r\n                .then(() => {\r\n                    setPersons(persons.filter(n => n.id !== id));\r\n                    setNotificationMessage(\r\n                        `Entry has been removed from the phonebook.`\r\n                    );\r\n                    setNotificationType(\"success\");\r\n                    setTimeout(() => {\r\n                        setNotificationMessage(null);\r\n                    }, 5000);\r\n                })\r\n                .catch(error => {\r\n                    setNotificationMessage(\r\n                        `This entry has already been removed from the phonebook.`\r\n                    );\r\n                    setNotificationType(\"error\");\r\n                    setTimeout(() => {\r\n                        setNotificationMessage(null);\r\n                    }, 5000);\r\n                    setPersons(persons.filter(n => n.id !== id));\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleNameChange = event => {\r\n        setNewName(event.target.value);\r\n    };\r\n\r\n    const handleNumberChange = event => {\r\n        setNewNumber(event.target.value);\r\n    };\r\n\r\n    const handleSearchChange = event => {\r\n        setNewSearch(event.target.value);\r\n    };\r\n\r\n    const handleDeletePersonOf = id => {\r\n        deletePerson(id);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Notification\r\n                message={notificationMessage}\r\n                type={notificationType}\r\n            />\r\n            <h2>Phonebook</h2>\r\n            <Filter value={newSearch} onChange={handleSearchChange} />\r\n            <h2>Add new entry</h2>\r\n            <PersonForm\r\n                onSubmit={addPerson}\r\n                nameValue={newName}\r\n                nameOnChange={handleNameChange}\r\n                numberValue={newNumber}\r\n                numberOnChange={handleNumberChange}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <Persons\r\n                newSearch={newSearch}\r\n                persons={persons}\r\n                handleDeletePersonOf={handleDeletePersonOf}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}